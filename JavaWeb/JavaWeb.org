* xml
  XML:可扩展标记语言；传输数据；配置文件
  W3C组织提供，是一种数据存储格式，本质就是字符串
** XML语法
*** 文档声明
    <?XML VERSION="1.0" ENCODING="UTF-8"?>
*** 元素
    + 标签体：开始标签和结束标签之间的文本
    + 自编标签：如元素中不包含任何内容，则可以合并为自闭标签
    + 根标签：一个XML文档有且只能有一个根标签
    + XML命名规范：区分大小写，命名中不能有空格，不能有敏感字符，不能有关键字
*** 属性
    多个属性间空格隔开，属性值用(")或（'）引开来
*** 注释
    <!-- 一段注释-->
*** 转义字符
** XML约束
   DTD和SCHEMA
   W3C组织提供
** XML解析
   + 两种解析：DOM解析和SAX解析
   + 解析开发包：JAXP(SUN) JDOM DOM4J
   + DOM4J解析：DOM4J是一个开源的XML解析包，具有性能优异、功能强大和极其易使用
*** DOM解析
    + 解析器把整个XML文档加载进内存，保存为一颗DOCUMENT的对象树，通过DOCUMENT对
      象，得到树上的节点对象，每个对象都能提供增删改查操作对象的方法
      - 优点：可是十分方便对节点进行增删改查操作；
             在内存中保存了文档的结构树，解析依次即能重复使用
      - 缺点：如果文档过大，占用内存空间，甚至内存溢出；
             将整个文档解析完才能操作，相对耗费时间，效率低
*** DOM4J解析
    + 导入DOM4J相关JAR包
    + 创建解析器读取XML文档，并进行增删改查操作
    + 由于操作的是内存中的DOCUMENT文档，所以还需要通过输出流写入到XML文档中
*** SAX解析
    + 原理：解析器逐行扫描XML文档，利用处理器接口中的方法进行解析
    + 优点：无需将整个XML文档加载到内存，占用内存小
           逐行解析遇到需要内容停下来处理，效率高
    + 缺点：每次需要数据，都要重新解析
           智能读取数据，不能做增删改操作
* WEB概述
  浏览器 --HTTP协议--> 服务器 --JDBC--> 数据库
  + 浏览器
    HTML CSS JS JQUERY
  + 服务器
    - 静态资源
      HTML、CSS、IMG、JS、JQUERY
      每一个用户在页面中看到的相同的资源
    - 动态资源
      程序处理过得 然后在页面完成的展示
      PHP ASP .NET--C#
      SERVLET/JSP--JAVA
      每一个用户在页面中看到的不相同的资源
  + 数据库
  + C/S与B/S
    C/S：CLIENT/SERVER 客户端和服务器端
        优点：画面精美，用户体验较好，客户端不是很依赖网速，对网速的要求较低
        缺点：体积大，下载不方便。服务器端的数据发生更新，所有客户端的都需要
             停止，并执行数据更新，这种情况在某些场景下是不被允许的
    B/S：BROWSER/SERVER 浏览器端和服务器端
        优点：不需要下载一个庞大的客户端，不需要停机等待更新数据
        缺点：画面质量较差，依赖网速
  + 大数据
    数据处理
    数据分析
    爬虫
    人工智能
* HTML
** 简介
   HTML：HYPER TEXT MARKUP LANGUAGE（超文本标记语言）
   W3C组织
   不是编程语言，是标记语言，文档的一种
** 结构
   [[~/Documents/BigData/JavaWeb/1.html]]
** 语法
   + 标签对：页面中的标签都是由其实标签和结束标签组成的标签对，在标签对中间可以添加的内容
     <BODY></BODY>
   + 自闭标签：在标签年内部自行关闭。自闭标签内部无法添加内容。
     举例：
         <br/>  --换行
         <hr/>  --在页面中画一行线
         [[~/Documents/BigData/JavaWeb/2.html]]
   + 在页面中输入多个空格、制表符、回车都会合并成一个空格来显示
   + HTML注释：<!--注释内容-->
     [[~/Documents/BigData/JavaWeb/3.html]]
   + 属性：在HTML起始标签身上可以定义的一个属性，在自闭标签中，直接书写在标签内部即可。
     - 属性的使用方式：属性名="属性名"
     - 注意:双引号要使用英文的
     [[~/Documents/BigData/JavaWeb/4.html]]
   + 转义字符：
     空格   &nbsp;
      <    &lt;
      >    &gt;
      "    &quot;
      '    &apos;
      &    &amp;
     [[~/Documents/BigData/JavaWeb/4.html]]
** html标签
   + font标签
     <font color="red" size= 7></font>
         属性：
             color:颜色名称  red yellow black....
                   #AAAAAA
                   rgb(255,255,255);
              size:1~7 默认是3
     [[~/Documents/BigData/JavaWeb/5.html]]
    + 标题标签
     <h1></h1>
     <h2></h2>
        ...
     <h6></h6>
     属性：
         align  :对齐方式
         left   :靠左对齐
         right  :靠右对齐
         center :居中
         justify:自适应
      [[~/Documents/BigData/JavaWeb/6.html]]
   + 列表标签
     - 无需列表
       <ul>
           <li></li>
           <li></li>
           <li></li>
       </ul>
       属性：
           type: 无序图标的类型
           disc: 实心黑圆
           square: 实心黑方块
           circle: 空心圆圈
     - 有序列表
       <ol>
           <li></li>
       </ol>
     [[~/Documents/BigData/JavaWeb/6.html]]
   + 锚标签
     <a>标签，也是超链接标签
     属性：
         href: 跳转的url地址
         name: 当前标签的名称
         id  : 当前标签的id
     - 在文档内部跳转
       <a name="tag"></a>
       <a href="#tag">点击跳转</a>
     - 在文档之间跳转
       <a href="url地址">点击一下</a>
     [[~/Documents/BigData/JavaWeb/7.html]]
   + 图片标签
     能够展示图片的标签，如果图片的路径不存在，则可以使用一段文字代替。
     <img src="JavaWeb/5.jpg" alt="" />
     属性：
         src: 图片的路径
         alt: 代替图片出现的文字
         width: 宽度
         height: 高度
     [[~/Documents/BigData/JavaWeb/8.html]]
   + 表格标签
   + 表单标签
