#+OPTIONS: toc: nil
* [[数据类型]]
** [[基础数据类型]]
    - [[1. Number数字]]
    - [[2. String字符串]]
    - [[3. bool布尔型]]
    - [[4. List列表]]
    - [[5. tuple元组]]
    - [[6. dict字典]]
  - [[数据类型转换方法]]

* 数据类型
** 基础数据类型
*** 1. Number数字
   #+BEGIN_SRC python
     # Number:int,float
     x1 = 10
     x2 = 10.0
     print(x1,x2)
     print(type(x1),type(x2))
     # print()
   #+END_SRC
*** 2. String字符串
   #+BEGIN_SRC python
     # string
     x3 = 'hello world'
     x4 = "hehe"
     x5 = '''a
     b
     c
     '''
     print(x3,x4,x5)
     print(x3)
     print(x4)
     print(x5)
     # ' ' " " ''' '''
     print(type(x3))
   #+END_SRC
*** 3. bool布尔型

   #+BEGIN_SRC python
     # bool
     a = True
     b = False
     print(a == 1)
     print(b == 0)
     print(2 > 3)
     print(3 < 5)
   #+END_SRC
*** 4. List列表

   #+BEGIN_SRC python
     # list
     lst = [1,2,3,4,5]
     print(lst,type(lst))
     lst2 = [1,2.5,4,'hello',[1,2,3]]
     print(lst2[2],type(lst2[2]))
   #+END_SRC
*** 5. tuple元组

   #+BEGIN_SRC python
     # tuple
     typ = (1,2,3,4,5)
     lst = [1,2,3,4,5]
     lst[0] = 100
     print(lst)
     # 元祖不可改
     # tup[0] = 100
   #+END_SRC
*** 6. dict字典

   #+BEGIN_SRC python
     # dict
     dic = {'a':100,'b':'hello'}
     print(dic,type(dic))
   #+END_SRC
** 数据类型转换方法

#+BEGIN_SRC python
  var1 = 10
  print(type(var1))

  var2 = float(var1)
  print(var2,type(var2))

  var3 = str(var1)
  print(var3,type(var3))
  print(var2 + 1)

  var4 = 10.756
  print(int(var4))
#+END_SRC
* 变量
** 命名规则
1. 变量名第一个字符必须是字母(大小写均可)或者下划线("_")，不能数字开头
2. 变量名不能呵呵常用工嗯呢该性名字重合，例如print,if,for
3. 不要有空格

   #+BEGIN_SRC python
     var1_2 = 10
     var1_2
   #+END_SRC
** 赋值

#+BEGIN_SRC python
  a = 1
  b = 10.0
  name = 'jack'
  print(a,b,name)

  a = b = c = 1
  d , e , f = 1 , 2 , 'hello'
  print(a,b,c,d,e,f)

  var1 = 10
  print(var1)
  var2 = 20
  print(var2)
#+END_SRC
* 运算符
** 算术运算符
#+BEGIN_SRC python
  a, b, c = 21, 10, 0
  c = a + b
  print("a+b=",c)

  c = a - b
  print("a-b=",c)

  c = a * b
  print("axb=",c)

  c = a / b
  print("a除以b为",c)

  c = a % b
  print("取余为",c)

  a, b, = 2, 3
  c = a ** b
  print("2的3次方为",c)

  a, b = 10, 4
  c = a//b
  print("取整为",c)
#+END_SRC
** 比较运算符

#+BEGIN_SRC python
  print(2 == 9)
  print(2 != 9)
  print(2 > 9)
  print(2 < 9)
  print(2 >= 9)
  print(2 <= 9)
#+END_SRC
** 逻辑运算符

#+BEGIN_SRC python
  print(True and False)
  print(True or False)
  print(not True)
  print('---')
  print(2 > 1 and 2 < 1)
  print(2 == 9 or 2 < 9)
  print(not 2 == 9)
  print(True == 1)

  # bool函数：将值转换为布尔型，其中只有以下情况bool()返回False：0,0.0,None,'',[],{}
  a, b, c, d = 10.0, 0, 'hello',[1,2,3,4]
  print(bool(a))
  print(bool(b))
  print(bool(c))
  print(bool(d))
#+END_SRC
** 成员运算符

#+BEGIN_SRC python
  # in / not in
  lst = [1,2,3,4,5]
  dic = {'a':1,'b':2,'c':3}
  st = 'abcdef'
  print(1 in lst)
  print('d' in lst)
  print('d' not in lst)
  print('h' in st)
#+END_SRC
* 注释

#+BEGIN_SRC python
  # print('I love python')
  print('hello world')

  a = [1,2,3,4,5]
  a = {'name':'faet','city':'shanghai','tel':1000000}
  for i in a:
      print(i)

  m = []
  '''
  for i in range(10):
      m.append('h'*i)
      #print(m)
  '''
  print(m)
#+END_SRC

* 序列及通用操作
** 判断是否属于序列

#+BEGIN_SRC python
  lst = [1,2,3,4,5,6]
  a,b = 1,10
  print(a in lst)
  print(b not in lst)
#+END_SRC
** 序列链接与重复

#+BEGIN_SRC python
  lst1 = [1,2,3]
  lst2 = ['a','b','c']
  print(lst1 + lst2)
  print(lst1*3,lst2*2)
#+END_SRC
** 下标索引

#+BEGIN_SRC python
  lst = [1,2,3,4,5,6,7,8,9,0]
  print(lst[0],lst[2],lst[9])
  print(lst[-1])
  # print(lst[10])
#+END_SRC
** 切片

#+BEGIN_SRC python
  lst = [1,2,3,4,5,6,7,8,9,0]
  print(lst[2:5])
  print(lst[:5])
  print(lst[4:])
  # 索引5的值 - 倒数第二个值
  print(lst[5:-1])
#+END_SRC
** 步长

#+BEGIN_SRC python
  lst = [1,2,3,4,5,6,7,8,9,0]
  # List[i:j:n]代表:索引i - 索引j，以n为步长
  print[lst[0:5:2]]
  # 以2 为步长，从第一个值开始截取lst数据
  print[lst[::2]]
  # 以2为步长，从第二只开始截取lst数据
#+END_SRC
** 序列的基本内置全局函数

#+BEGIN_SRC python
  lst = [1,2,3,4,5,6,7,8,9,0]
  # 列表元素个数
  print(len(lst))
  # 返回列表的最大值、最小值、求和，这三个函数都只针对数字的list
  print(max(lst),min(lst),sum(lst))
  # .index(obj)方法：从列表中找出某个值第一个匹配项的索引位置
  print(lst.index(3))

  lst1 = [1,1,2,3,4,5,5,5,5,6]
  # .count(obj)方法：计算值的出现次数
  print(lst.count(5))
#+END_SRC
* 列表的list的常用操作
** 列表的特征

#+BEGIN_SRC python
  # 可包含任意类型的对象：数值、字符串、列表等
  lst1 = [1,2,3,'a','b','c',[1,2,3]]

  lst2 = [143,56,894,67,43]
  print(lst2[0],lst2[4],lst2[-1])

  lst3 = [1,2,3]
  # 可随意变换列表长度，相当于随意指定新的列表
  lst3 = lst3 * 3

  # 可嵌套
  lst4 = [1,2,['a','b']]

  lst5 = [100,101,102]
  lst5[0] = 10
  # 可原位改变
  print(lst5)

#+END_SRC
** 列表生成器

#+BEGIN_SRC python
  # range()是生成器，指向了一个范围，生成的都是整数
  # range(5)代表指向了0，1，2，3，4这几个值
  # range(2,5)代表指向了2，3，4这几个值，注意这里不是使用 ：
  # range(0,10,2)代表指向了0，2，4，6，8这几个值，最后的2代表步长
  print(range(5),type(range(5)))

  # 通过list()函数生成列表
  lst = list(range(5))
  print(lst)
#+END_SRC
** 添加元素

#+BEGIN_SRC python :results output
  lst = list(range(10))
  # 生成的是一个新的列表
  print(lst + [1,2,3])
  # 改变的是lst的值
  lst.append('a')
  print(lst)

  a = [1,2,3]
  b = [3,4,5]
  a.append(b)
  print(a)

  m = [1,3,4]
  n = [3,4,5]
  m.extend(n)
  print(m)
#+END_SRC

#+RESULTS:
: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3]
: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 'a']
: [1, 2, 3, [3, 4, 5]]
: [1, 3, 4, 3, 4, 5]

** 删除元素

   #+BEGIN_SRC python :results output
     lst = list(range(10))
     print(lst)
     lst.remove(5)

     del lst[2:4]
     print(lst)

     # New in version 3.3 clear() and copy()methods
     # lst.clear() same as del lst[:] and lst[:] = []
     # lst.clear()
     # lst[:] =
     del lst[:]
     print(lst)
   #+END_SRC

   #+RESULTS:
   : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
   : [0, 1, 4, 6, 7, 8, 9]
   : []
** 插入元素

#+BEGIN_SRC python :results output
  lst = list(range(10))
  print(lst)
  lst.insert(3,'a')
  print(lst)

  lst.insert(5,[1,2,3])
  print(lst)
#+END_SRC

#+RESULTS:
: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
: [0, 1, 2, 'a', 3, 4, 5, 6, 7, 8, 9]
: [0, 1, 2, 'a', 3, [1, 2, 3], 4, 5, 6, 7, 8, 9]
** 复制

#+BEGIN_SRC python :results output
  lst = list(range(10))
  # lst and lst1 point to the same list
  lst1 = lst
  lst1[2] = 'hello'
  print(lst,lst1)

  lst = list(range(10))
  # lst.copy() copy a new list
  lst2 = lst.copy()
  lst2[2] = 'hello'
  print(lst,lst2)
#+END_SRC

#+RESULTS:
: ([0, 1, 'hello', 3, 4, 5, 6, 7, 8, 9], [0, 1, 'hello', 3, 4, 5, 6, 7, 8, 9])
: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] [0, 1, 'hello', 3, 4, 5, 6, 7, 8, 9]
** 排序

#+BEGIN_SRC python :results output
  lst1 = [12,45,32,98,45,66,3]
  lst2 = ["asd","cxv","ghv"]
  lst3 = ["asd","cxv","bhv"]
  lst1.sort()
  lst2.sort()
  lst3.sort()
  print(lst1)
  print(lst2)
  print(lst3)

  lst1.sort(reverse = True)
  lst2.sort(reverse = True)
  lst3.sort(reverse = True)
  print(lst1)
  print(lst2)
  print(lst3)

  # sorted --> sort and copy
  lst4 = sorted(lst1)
  print(lst1)
  print(lst4)
  lst4.append('hello')
  print(lst4)
#+END_SRC

#+RESULTS:
: [12, 45, 32, 98, 45, 66, 3]
: ['asd', 'cxv', 'ghv']
: ['asd', 'cxv', 'bhv']
: [98, 66, 45, 45, 32, 12, 3]
: ['ghv', 'cxv', 'asd']
: ['cxv', 'bhv', 'asd']
: [98, 66, 45, 45, 32, 12, 3]
: [3, 12, 32, 45, 45, 66, 98]
: [3, 12, 32, 45, 45, 66, 98, 'hello']
* 元祖tuple
不可变的“列表”

#+BEGIN_SRC python :results output
  # -*- coding:utf-8 -*-
  # python2.7写法
  # python3可以省略开头注释

  tup1 = ('physics','chemistry',1997,2000);
  tup2 = (1,2,3,4,5);
  # 可以不加括号
  tup3 = 'a','b','c','d'
  # 元组中只包含一个元素时，需要在元素后添加逗号
  tup4 = (50,)
  # 索引、切片和list一样
  print(tup1,tup3[:2])

  #元组不能单独删除内部元素（不可变性），但可以del语句来删除整个元组
  del tup3
  #print(tup3)

  print(len(tup1))
  print(tup1 + tup2)
  print(tup4 * 3)
  #序列通用函数
  print(max(tup2),min(tup2))

  lst = list(range(10))
  # tuple()函数：将列表转换为元组
  tup5 = tuple(lst)
  print(tup5)
#+END_SRC

#+RESULTS:
: (('physics', 'chemistry', 1997, 2000), ('a', 'b'))
: 4
: ('physics', 'chemistry', 1997, 2000, 1, 2, 3, 4, 5)
: (50, 50, 50)
: (5, 1)
: (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
* 文本序列str常用操作
** 字符串引号
#+BEGIN_SRC python :results output
  # -*- coding:utf-8 -*-
  # python3可以省略开头注释

  # 字符串引号

  str1 = "abc"
  str2 = 'abc'
  # 双引号单引号无区别，但文本中有引号的时候要相互交替使用
  str3 = 'my name is "fatbird"'
  # 需要多行字符串时候用三引号''' ''' """ """
  str4 = '''hello ! how are you ?
            I`m fine,thank you.'''
  print(str1)
  print(str2)
  print(str3)
  print(str4)
  #+END_SRC

  #+RESULTS:
  : abc
  : abc
  : my name is "fatbird"
  : hello ! how are you ?
  :           I`m fine,thank you.
** 转义字符
#+BEGIN_SRC python :results output
  # -*- coding:utf-8 -*-
  # python3可以省略开头注释

  # 转义字符
  # \' \" 分别输出单引号，双引号
  print('\'','\"')

  # \n 空行
  print('hello\nhow do you do ?')

  # 输出\, 所以文件路径用"/"或者"\\"
  print('\\')
#+END_SRC

#+RESULTS:
: ' "
: hello
: how do you do ?
: \
** 序列通用功能

#+BEGIN_SRC python :results output
  # -*- coding:utf-8 -*-
  # python3可以胜率开头注释

  # 序列通用功能
  # in/not in 判断是否存在
  print('a' in 'abc')
  # 文本连接
  print('我很帅' + '没错')
  # 文本复制
  print('handsome' * 4)

  # 索引、切片、步长
  st = 'abcdefg'
  print(st[2],st[-1])
  print(st[:2])
  print(st[::2])

  # .index()方法
  print(st.index('g'))

  # 计算字符串长度（思考这里能否把逗号换位"+"）
  print('st长度为：',len(st))
#+END_SRC

#+RESULTS:
: True
: 我很帅没错
: handsomehandsomehandsomehandsome
: c g
: ab
: aceg
: 6
: st长度为： 7
** 字符串常用功能

#+BEGIN_SRC python
  # -*- coding:utf-8 -*-
  # python3可以省略开头注释

  # 字符串常用功能
  st = "I`m handsome!"
  st2 = st.replace('handsome','ugly')
  print(st)
  print(st2)
  st = 'hahaha'
  st2 = st.replace('ha','ha',2)
  print(st2)
  # 修改字符串，count要更换几个
  # str.replace(old,new,count)

  st = 'poi01,116.446238,39.940166'
  lst = st.split(',')
  print(lst)

  # str.split(obj)
#+END_SRC
