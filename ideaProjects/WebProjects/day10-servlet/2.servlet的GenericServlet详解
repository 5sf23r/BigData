1. servlet是一个接口，内部只有方法签名，没有方法体

    如果要使用servlet就必须实现servlet接口，有以下方法：
    void destroy() ----常用
      ServletConfig getServletConfig()
     String getServletInfo()
      void init(ServletConfig config)  ----常用
     void service(ServletRequest req, ServletResponse res)  ---最常用

2.servlet的一个实现类：GenericServlet类

    对Serlvet接口中的大部分方法都做了默认实现，
    只有service方法是一个抽象方法需要继承者自己实现。
    实现者只需要实现Service方法在其中写处理请求的代码即可。

    创建一个类：cn.tedu.servlet.Servlet02_GenericServlet
    public class Servlet02_GenericServlet extends GenericServlet {
        @Override
        public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
            //主要的业务逻辑代码
            //实现的功能如下：在浏览器中显示当前的日期时间
            Date date = new Date();
            //如何把data日期 返回给浏览器
            System.out.println(date.toString());
            //参数一：ServletRequest 是 接受浏览器的请求
            //参数二：ServletResponse 是 响应给浏览器的结果
            //servletResponse.getWriter();它只是通过response打开一个wirter流
            servletResponse.getWriter().write(date.toString());


        }
    }
3. 浏览器发送HTTP请求的方式：7种

    常用的有： GET方式 和 POST 方式
    不常用的有：PUT 、 DELETE 和 TARCE,HEAD 、 OPTIONS 

    问题是：GenericServlet.service()是专门接受请求的，
            那么它能接受多少中HTTP请求？？
            答案：能接受以上7种所有的请求。

    接受请求后，不同的请求方式，比如get和post方式，
    那么service方法中的处理逻辑要分开执行，
    get方式的请求执行get的代码逻辑
    post方式的请求执行post的代码逻辑

    这种书写方式很繁琐，需要简化处理！！！！
    //根据不同的请求，会执行不同的代码逻辑
    //1.获取浏览器的请求方式
    HttpServletRequest req = (HttpServletRequest) servletRequest;
    String method = req.getMethod();//得到http的请求方式
    System.out.println("请求方式："+method);
    if ("GET".equalsIgnoreCase(method)) {
        System.out.println("get方式的处理逻辑在这里写");
    } else if ("POST".equalsIgnoreCase(method)) {
        System.out.println("post方式的处理逻辑在这里写");
    }








