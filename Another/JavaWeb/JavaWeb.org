* Web概述
1. B/S：
   Browser - Server
   - 浏览器服务器模型 WEBQQ 网页游戏
     1. 优点：
        不需要下载客户端程序，使用浏览器可以直接访问，程序的升级操作是在服务器端进行的，浏览器只需要刷新页面就可以看到升级后的效果
     2. 缺点：
        浏览器具有一定的局限性，页面的展示能力仍然是很差，所有的页面数据都需要从服务器实时的获取，所以对网速的依赖很高
2. C/S：
   Client - Server
   - 客户端服务器模型 QQ LOL
     1. 优点：
        客户端可以任意的设计，页面的展示能力就可以很强，由于大量的资源都已经保存在了客户端，和服务器交互的仅仅是一些变化的数据，所以对网速的依赖很低
     2. 缺点：
        第一次使用时需要下载客户端程序，一旦程序需要升级操作，所有的客户端程序都需要升级，在有些场景中是不能被接收的
3. web概述，如图所示：
   [[./Img/1.png]]
* HTML
1. HTML是什么
   - HTML（Hyper Text Mark-up Language）超文本标记语言，最基础的网页语言 W3C
   - HTML 不是一门编程语言，而是一门标记语言
   - HTML 是用标记（标签/元素）来描述网页内容的
   - HTML 是文档的一种
2. HTML的结构
   #+BEGIN_SRC html
     <!DOCTYPE HTML>
     <HTML>
       <HEAD></HEAD>
       <BODY></BODY>
     </HTML>
   #+END_SRC
   <!DOCTYPE HTML>用来指定当前页面所遵循的html的版本
   - 头部文件用来存放html页面的基本属性信息，优先被加载
   - 体部分用来存放页面数据，是可见的页面内容
     + <tittle></tittle>指定网页的标题
     + <meta http-equiv="Content-type" content="text/html;charset=UTF-8"/>其中的charset的值用来指定浏览器用什么编码解析当前页面
3. HTML语法
   - HTML标签分为开始标签和结束标签，如果标签内没有修饰的内容，开始标签和结束标签可以合并为一个自闭标签。如：<br/>换行；<hr/>在当前行画一条线
   - 标签通常都可以具有属性，属性与属性值用"="连接，属性的值可以用双引号、单引号引起来或者不用引号，一般会用双引号引起来。
     + 如果不生效查看页面代码使用的是否为英文双引号
   - HTML中对页面中代码需要做注释：<!--html的注释-->
   - HTML中多个连续的空白字符（制表符，空格，换行）默认会合并为一个空格来显示。
     + 如果非要输入空格，可以用转义字符来替换&nbsp;
     + 如果非要输入换行，可以用<br/>来代替
     + 转义字符
       |------+----------|
       |      | 转义字符 |
       | <    | &lt;     |
       | >    | &gt;     |
       | "    | &quot;   |
       | '    | &apos;   |
       | 空格 | &nbsp;   |
       |------+----------|
4. font标签
   用来指定文本的字体/大小/颜色
   + color：指定字体的颜色
     1. 值可以指定为颜色名，如：red
     2. 或十六进制的颜色，如：#000000
     3. 或rgb三原色值，如：rgb(255,255,255)；ie适用
   + 例：<font size=5 color=red>字体标签示例</font>
5. 标题标签
   指定特定样式字体的一组标签
   #+BEGIN_SRC html
     <h1>一级标签</h1>
     <h2>二级标签</h2>
     <h3>三级标签</h3>
     <h4>四级标签</h4>
     <h5>五级标签</h5>
     <h6>六级标签</h6>
   #+END_SRC
   + 属性
     align：指定文本的排列
     |---------+--------|
     | left    | 靠左   |
     | center  | 居中   |
     | right   | 靠右   |
     | justify | 自适应 |
     |---------+--------|
6. 列表标签
   - 无序列表
     + <ul>定义一个无序列表
     + <li>定义列表中的项
     + 属性
       type：定义项目符号的类型。disc、square、circle
   - 有序列表
     #+BEGIN_SRC html
       <ol>
         <li></li>
       <ol>
     #+END_SRC
7. img标签 -- 图像标签
   #+BEGIN_SRC html
     <img src="图片的路径" alt="代替图像显示的文本"/>
   #+END_SRC
   - 必选属性：
     1. src:图片的路径
     2. alt:代替图像显示的文本
   - 可选属性
     1. width:宽度px%
     2. height:高度px%
     3. border:边框的宽度px
8. 超链接 -- <a>锚
   #+BEGIN_SRC html
     <a name="标记">标记位置</a>
     <p>......<!--很多空行以制造网页过长的效果-->
       <a href="#标记">返回标记位置</a>
   #+END_SRC
   - 用于指向当前位置以外的资源
     1. 用于创建指向另外一个文档的超链接
     2. 用于在当前页面的不同位置之间进行跳转，利用id或name属性进行跳转
        一般在本页面中使用，当网页内容过长，定位标记会比拖动滚动条方便快捷。
        + 注：定位标记要和超链接结合使用才有效
        + 注：使用定位标记时一定在href值的开始加入#标记名
   - 重要属性
     + href：所指向资源的URL
     + name：指定锚的名字
     + target：指定浏览器打开目标URL的方式
       |--------+-------------------------|
       | _blank | 在新窗口中打开目标url   |
       | _self  | 在当前窗口中打开目标url |
       |--------+-------------------------|
9. 表格标签--<table>
   |---------+--------------------|
   | <table> | 定义一个HTML的表格 |
   | <tr>    | 定义表格中的行     |
   | <td>    | 定义表格中的单元格 |
   | <th>    | 定义表格中的表头   |
   |---------+--------------------|
   - table的重要属性
     |-------------+----------------------------|
     | border      | 边框宽度                   |
     | cellspacing | 单元格之间的空白举例       |
     | cellpadding | 边框与单元格内容之间的举例 |
     | bgcolor     | 背景颜色                   |
     | bordercolor | 边框颜色                   |
     | width       | 宽度                       |
     | align       | 对齐方式                   |
     |-------------+----------------------------|
   - tr的重要性
     |---------+----------|
     | align   | 对齐方式 |
     | bgcolor | 背景颜色 |
     |---------+----------|
   - th/td重要属性
     |-----------+----------------|
     | align     | 对齐方式       |
     | bgcolor   | 背景颜色       |
     | width     | 宽度           |
     | height    | 高度           |
     | colspan   | 可横跨的列数   |
     | rowspan   | 可竖跨的行数   |
     | <caption> | 定义表格的标题 |
     |-----------+----------------|



* 表单
1. 表单
   - 浏览器向服务器发送数据的方式，有两种：
     1. 利用超链接向服务器发送数据 -- 请求参数
        在超链接的后面拼接上要发送的请求参数，链接和请求参数之间用?分割，参数名和参数值用=连接，多个参数之间用&分割，可以存在多个同名的参数
     2. 利用表单向服务器发送数据
        利用HTML中的<form>标签以及一些表单项标签，用户可以输入数据，通过提交表单发送数据给服务器
